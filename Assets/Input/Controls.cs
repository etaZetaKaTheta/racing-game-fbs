//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Input/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Main"",
            ""id"": ""50cec9c8-c5bb-4aec-97ec-db3e7452469f"",
            ""actions"": [
                {
                    ""name"": ""CarMovement"",
                    ""type"": ""Value"",
                    ""id"": ""be0a2600-d922-41bc-b89e-13ae33879cd6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CarBreaking"",
                    ""type"": ""Button"",
                    ""id"": ""c08f9a32-68f3-43c5-8512-6e7fb1b7e0af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GearShiftingUp"",
                    ""type"": ""Button"",
                    ""id"": ""6d190287-3d48-4abc-94da-dd609299d5af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GearShiftingDown"",
                    ""type"": ""Button"",
                    ""id"": ""d5abf4b4-1146-45ee-8708-f63aa615ea21"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""d09eac5d-e422-4d90-bea1-e60150cc59f1"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CarMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7659687a-1576-414c-b4d9-fc9f8c352a3a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CarMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4ff97e24-6d9f-4c11-bf5b-c2ec856c8d9c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CarMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3fd5c0d9-455d-4243-b7e1-ad06443b5c01"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CarMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8f1f6ab3-a0a1-45be-aacb-e4b8e73206de"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CarMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Controller"",
                    ""id"": ""9d49ffd5-7730-4a2f-944a-a5f78cf671c3"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CarMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""eed04899-7ae4-4c9b-8e66-2de6263875bb"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CarMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7896f091-a7a4-4049-9c24-79dcaad61353"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CarMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""df5fca6c-c0a9-4d50-907f-f058640c9388"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CarMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5a38f4cc-416f-4ec8-bf28-5a9b733393a9"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CarMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""459e7ccd-3620-4f49-b9f6-68787bf81051"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CarBreaking"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Controller"",
                    ""id"": ""0fc58470-81d7-4036-b7f7-9869fbd61ebd"",
                    ""path"": ""1DAxis(minValue=0,whichSideWins=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CarBreaking"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""5911151e-2cb5-46a9-84c2-d4fd79dcdb2a"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CarBreaking"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7c6d3167-470d-4879-8ea4-270826c055f2"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GearShiftingUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1178a29c-d064-44e5-aaf1-82501719ee18"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GearShiftingUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""39e884f9-c8d0-495a-9522-64bea1497455"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GearShiftingDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1b19a67-48f3-49d7-9aa5-e036b2c530ae"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GearShiftingDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Main
        m_Main = asset.FindActionMap("Main", throwIfNotFound: true);
        m_Main_CarMovement = m_Main.FindAction("CarMovement", throwIfNotFound: true);
        m_Main_CarBreaking = m_Main.FindAction("CarBreaking", throwIfNotFound: true);
        m_Main_GearShiftingUp = m_Main.FindAction("GearShiftingUp", throwIfNotFound: true);
        m_Main_GearShiftingDown = m_Main.FindAction("GearShiftingDown", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Main
    private readonly InputActionMap m_Main;
    private IMainActions m_MainActionsCallbackInterface;
    private readonly InputAction m_Main_CarMovement;
    private readonly InputAction m_Main_CarBreaking;
    private readonly InputAction m_Main_GearShiftingUp;
    private readonly InputAction m_Main_GearShiftingDown;
    public struct MainActions
    {
        private @Controls m_Wrapper;
        public MainActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @CarMovement => m_Wrapper.m_Main_CarMovement;
        public InputAction @CarBreaking => m_Wrapper.m_Main_CarBreaking;
        public InputAction @GearShiftingUp => m_Wrapper.m_Main_GearShiftingUp;
        public InputAction @GearShiftingDown => m_Wrapper.m_Main_GearShiftingDown;
        public InputActionMap Get() { return m_Wrapper.m_Main; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainActions set) { return set.Get(); }
        public void SetCallbacks(IMainActions instance)
        {
            if (m_Wrapper.m_MainActionsCallbackInterface != null)
            {
                @CarMovement.started -= m_Wrapper.m_MainActionsCallbackInterface.OnCarMovement;
                @CarMovement.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnCarMovement;
                @CarMovement.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnCarMovement;
                @CarBreaking.started -= m_Wrapper.m_MainActionsCallbackInterface.OnCarBreaking;
                @CarBreaking.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnCarBreaking;
                @CarBreaking.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnCarBreaking;
                @GearShiftingUp.started -= m_Wrapper.m_MainActionsCallbackInterface.OnGearShiftingUp;
                @GearShiftingUp.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnGearShiftingUp;
                @GearShiftingUp.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnGearShiftingUp;
                @GearShiftingDown.started -= m_Wrapper.m_MainActionsCallbackInterface.OnGearShiftingDown;
                @GearShiftingDown.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnGearShiftingDown;
                @GearShiftingDown.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnGearShiftingDown;
            }
            m_Wrapper.m_MainActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CarMovement.started += instance.OnCarMovement;
                @CarMovement.performed += instance.OnCarMovement;
                @CarMovement.canceled += instance.OnCarMovement;
                @CarBreaking.started += instance.OnCarBreaking;
                @CarBreaking.performed += instance.OnCarBreaking;
                @CarBreaking.canceled += instance.OnCarBreaking;
                @GearShiftingUp.started += instance.OnGearShiftingUp;
                @GearShiftingUp.performed += instance.OnGearShiftingUp;
                @GearShiftingUp.canceled += instance.OnGearShiftingUp;
                @GearShiftingDown.started += instance.OnGearShiftingDown;
                @GearShiftingDown.performed += instance.OnGearShiftingDown;
                @GearShiftingDown.canceled += instance.OnGearShiftingDown;
            }
        }
    }
    public MainActions @Main => new MainActions(this);
    public interface IMainActions
    {
        void OnCarMovement(InputAction.CallbackContext context);
        void OnCarBreaking(InputAction.CallbackContext context);
        void OnGearShiftingUp(InputAction.CallbackContext context);
        void OnGearShiftingDown(InputAction.CallbackContext context);
    }
}
